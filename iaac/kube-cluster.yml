Description: >
  Melisa Bekan / p6-Capstone Project
  Creates an Amazon EKS Cluster
  
Parameters:
  EnvironmentName:
    Description: An Environment name that will be prefixed to resources
    Default: p6-capstone-project
    Type: String
  SSHKeyName:
    Description: SSH key for management access
    Default: udacity
    Type: String
  ImageId:
    Description: Defines the Image-ID of the OS to deploy
    Default: ami-0767046d1677be5a0
    Type: String

Resources:
  ClusterInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub ${EnvironmentName}-cluster-iamprofile
      Path: "/"
      Roles:
        - !Ref EKSClusterRole

  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-cluster-iamrole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess

  CapstoneCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Version: "1.19"
      Name: !Sub ${EnvironmentName}-ekscluster
      RoleArn: !GetAtt EKSClusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Sub ${EnvironmentName}-SECG
        SubnetIds:
          Fn::Split:
            - ","
            - Fn::ImportValue:
                Fn::Sub: ${EnvironmentName}-PUB-NETS

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-ec2-SecG
      GroupDescription: Allow port 22 for management
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  ec2-instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      SecurityGroups:
        - Ref: InstanceSecurityGroup
      KeyName: !Ref SSHKeyName
      ImageId: !Ref ImageId
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-ec2-instance1
        - Key: Project
          Value: !Ref EnvironmentName

  ec2-instance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      SecurityGroups:
        - Ref: InstanceSecurityGroup
      KeyName: !Ref SSHKeyName
      ImageId: !Ref ImageId
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-ec2-instance2
        - Key: Project
          Value: !Ref EnvironmentName
Outputs:
  EksId:
    Description: EKS id
    Value: !Ref CapstoneCluster
    Export:
      Name: !Sub ${EnvironmentName}-EKSCluster

  EKSRoleArn:
    Description: Role for accessing and creating aws resources
    Value: !GetAtt EKSClusterRole.Arn
    Export:
      Name: !Sub ${EnvironmentName}-EKSRole